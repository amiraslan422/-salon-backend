require('dotenv').config();
const mongoose = require('mongoose');
const express = require('express');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 5000;

// Middleware
app.use(cors());
app.use(express.json()); // –î–ª—è —á—Ç–µ–Ω–∏—è JSON –∏–∑ –∑–∞–ø—Ä–æ—Å–æ–≤

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤
const servicesRoutes = require('./routes/services');
const galleryRoutes = require('./routes/gallery');
const bookingsRoutes = require('./routes/bookings');
const adminsRoutes = require('./routes/admins');
const feedbackRoutes = require('./routes/feedback');
console.log('‚úÖ –ú–∞—Ä—à—Ä—É—Ç /api/bookings –∑–∞–≥—Ä—É–∂–µ–Ω');
app.use('/api/services', servicesRoutes);
app.use('/api/gallery', galleryRoutes);
app.use('/api/bookings', bookingsRoutes);
app.use('/api/admins', adminsRoutes);
app.use('/api/feedback', feedbackRoutes);
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).send('Something broke!');
});
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose.connect(process.env.MONGODB_URI)
  .then(() => {
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB');

    app.get('/', (req, res) => {
      res.send('–ü—Ä–∏–≤–µ—Ç, –ênbb!');
    });

    app.listen(PORT, () =>
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É: ${PORT}`)
    );
  })
  .catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
  });
